module Test_ZT

include(joinpath(@__DIR__, "..", "..", "src", "ZMPBipedRobot.jl"))
import .ZMPBipedRobot
const ZMProbot = ZMPBipedRobot
using Test

sleep(0.1) # used for good printing
println("Started test")
URDFfileName = "ZMP_2DBipedRobot.urdf"
br = ZMProbot.BipedRobot(;
    readFile = true,
    URDFfileName = URDFfileName,
    paramFileName = "param_test.jl",
)

fp = ZMProbot.FootPlanner(; br = br)
zt = ZMProbot.ZMPTrajectory(; br = br, fp = fp, check = false)
tref = reduce(vcat, zt.timeVec)
ZMP = reduce(hcat, zt.ZMP)

println(ZMP)
@testset "ZMP Trajectory Generator" begin
    @test length(zt.ZMP) == length(fp.center)
    @test [tref[i] â‰ˆ br.Ts * (i - 1) for i in 1:length(tref)] == ones(length(tref))
    @test length(tref) == length(ZMP[1, :])

    @test ZMP == [
        0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -2.168404344971009e-19 0.0034293552812071342 0.012620027434842255 0.025925925925925936 0.04170096021947877 0.05829903978052128 0.0740740740740741 0.08737997256515778 0.09657064471879293 0.10000000000000014 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.10342935528120714 0.11262002743484227 0.12592592592592594 0.14170096021947878 0.15829903978052132 0.17407407407407413 0.18737997256515782 0.19657064471879296 0.20000000000000012 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2
        1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.18 1.180891632373114 1.1832812071330592 1.1867407407407409 1.1908422496570648 1.1951577503429358 1.1992592592592595 1.2027187928669412 1.2051083676268863 1.2060000000000002 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.2042167352537723 1.199437585733882 1.1925185185185185 1.1843155006858712 1.1756844993141289 1.1674814814814816 1.160562414266118 1.1557832647462278 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.154 1.1557832647462276 1.160562414266118 1.1674814814814813 1.1756844993141287 1.184315500685871 1.1925185185185183 1.199437585733882 1.204216735253772 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206 1.206
    ]
end

sleep(0.1) # used for good printing
println("End test")

end # End Main Module 
